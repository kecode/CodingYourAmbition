fn main() {

    //1、泛型是具体类型或者其它属性的抽象替代，用于减少代码重复.
    //2、在函数定义中使用泛型。
    //3、在结构体中使用泛型。
    //4、枚举中的泛型。
    //5、方法中的泛型。
    //6、总结：使用泛型并不会造成程序性能上的损失。rust通过在编译时进行泛型代码的单态化来保证效率。单态化时通过填充编译时使用的具体类型，将通用代码转换为特定代码的过程。
    ////--------没有泛型-----------






    println!("Hello, world!");
}
